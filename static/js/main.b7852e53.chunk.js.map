{"version":3,"sources":["config.js","utils/apollo.js","components/Header/HeaderContainer.js","components/Header/Header.js","components/Header/GithubLogin.js","components/Common/LoaderSvg.js","components/Common/Loader.js","components/Blog/BlogContainer.js","components/Blog/Card/CardContainer.js","components/Blog/Card/CardHeader.js","components/Blog/Card/CardCategory.js","components/Blog/Card/CardDescription.js","components/Blog/Card/CardReadingTime.js","components/Blog/Card/Card.js","containers/Blog.js","utils/emoji.js","utils/tools.js","utils/auth.js","components/Post/PostContainer.js","components/Post/PostTitle.js","components/Post/PostDate.js","components/Post/PostDateLink.js","components/Post/PostReaction.js","components/Post/BackButton.js","components/Post/Author/AuthorDetails.js","components/Post/Author/AuthorAvatar.js","components/Post/Author/AuthorName.js","components/Markdown/Overrides.js","components/Post/Comment/Comment.js","components/Post/Comment/CommentContainer.js","components/Post/Comment/CommentLink.js","components/Post/Comment/CommentLinkContainer.js","containers/CommentsSection.js","containers/BlogPost.js","Router.js","containers/GithubCallback.js","App.js","index.js"],"names":["config","client","ApolloClient","uri","request","operation","setContext","headers","authorization","atob","userClient","token","HeaderContainer","styled","div","Header","isAbsolute","enableOAuth","OAuthClientID","ButtonContainer","absolute","Button","button","Text","span","GithubLogin","isLoggedIn","localStorage","getItem","callOAuth","a","window","location","href","onClick","icon","faGithub","LoaderSvg","fill","width","height","viewBox","xmlns","stroke","fill-rule","transform","stroke-width","stroke-opacity","cx","cy","r","d","attributeName","type","from","to","dur","repeatCount","LoaderContainer","Loader","BlogContainer","CardContainer","CardHeader","StyledCategory","CardCategory","value","key","id","style","backgroundColor","color","name","CardDescription","p","ReadingTime","CardReadingTime","time","Card","blog","useState","labels","setLabels","history","useHistory","useEffect","nodes","filter","title","number","push","marginTop","map","i","readingTime","body","minutes","bodyText","GET_POSTS","gql","Blog","posts","setPosts","useQuery","loading","error","data","console","repository","issues","v","emojis","THUMBS_UP","THUMBS_DOWN","LAUGH","HOORAY","CONFUSED","HEART","ROCKET","EYES","getNameByEmoji","emoji","obj","reversed","Object","keys","forEach","reverseMapping","getAuthenticatedUser","fetch","Headers","response","json","result","PostContainer","PostTitle","h1","PostDate","PostDateLink","PostReaction","BackButton","AuthorDetails","AuthorAvatar","img","AuthorName","HyperLink","children","props","target","rel","className","CodeBlock","language","docco","Comment","comment","CommentContainer","src","author","avatarUrl","alt","login","moment","updatedAt","format","options","overrides","component","pre","CommentLink","CommentLinkContainer","CommentsSection","postUrl","comments","BlogHome","issueNumber","parseInt","split","pop","post","setPost","postNodeId","setPostNodeId","reactionPopup","setReactionPopup","postReactions","setPostReactions","postComments","setPostComments","reactionsContainer","useRef","userToken","setReactionFun","useCallback","reactions","reactions_array","element","emojiName","by","user","content","toggleReaction","length","reactionToAdd","mutate","mutation","node_id","current","forceUpdate","issue","go","back","url","onSelect","ref","counters","onAdd","Router","basename","exact","path","BlogPost","OAuthSecret","GithubCallback","setLoading","authenticate","code","method","URLSearchParams","client_id","client_secret","Accept","setUsername","setItem","urlParams","search","get","then","access_token","replace","origin","pathname","Application","Helmet","charSet","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.b7852e53.chunk.js","sourcesContent":["export const config = {\n  // Your Github Converted Token To Know How To Get Your Token Look at Readme.md\n  githubConvertedToken:\n    \"Z2hwX3ZJZktsYkRnQ1JXVjlIYUdCamVJUWRBY2hKbUdhajBOVVJ6Rw==\",\n\n  // Your Github UserName\n  githubUserName: \"worldzhao\",\n\n  // Your Github Repo Name Where You Have your issues as Blog\n  githubRepo: \"blog\",\n\n  // Set it to true if you have a Github app to add to this project\n  // and fill the client ID & secret\n  enableOAuth: true,\n  OAuthClientID: \"Iv1.95e045dfedeaaf47\",\n  OAuthSecret: \"cc3db76ffe9848c92d83172807eececa79f0eb22\",\n  title: \"海秋\",\n};\n","import ApolloClient from \"apollo-boost\";\n\nimport { config } from \"../config\";\n\nexport const client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: (operation) => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${atob(config.githubConvertedToken)}`,\n      },\n    });\n  },\n});\n\nexport const userClient = (token) =>\n  new ApolloClient({\n    uri: \"https://api.github.com/graphql\",\n    request: (operation) => {\n      operation.setContext({\n        headers: {\n          authorization: `Bearer ${token}`,\n        },\n      });\n    },\n  });\n","import styled from \"styled-components\";\n\nexport const HeaderContainer = styled.div`\n  position: relative;\n  padding: 32px;\n  text-align: center;\n`;\n","import React from \"react\";\n\nimport { HeaderContainer, GithubLogin } from \"./\";\n\nexport const Header = () => {\n  return (\n    <HeaderContainer>\n      <GithubLogin isAbsolute={true} />\n    </HeaderContainer>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { config } from \"../../config\";\n\nconst { enableOAuth, OAuthClientID } = config;\n\nconst ButtonContainer = styled.div`\n  display: ${enableOAuth ? \"block\" : \"none\"};\n  position: ${({ absolute }) => (absolute ? \"absolute\" : \"initial\")};\n  top: 10px;\n  right: 10px;\n`;\nconst Button = styled.button`\n  -webkit-appearance: none;\n  background: linear-gradient(\n    180deg,\n    rgb(136, 220, 109) 0%,\n    rgb(92, 168, 65) 100%\n  );\n  color: #fff;\n  border: none;\n  padding: 8px 16px;\n  font-size: 16px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: 0.2s;\n  outline: 0;\n\n  :hover {\n    box-shadow: 0px 0px 10px 1px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst Text = styled.span`\n  color: #fff;\n  font-size: 18px;\n`;\n\nexport const GithubLogin = ({ isAbsolute }) => {\n  const isLoggedIn = localStorage.getItem(\"githubToken\") || false;\n\n  const callOAuth = async () => {\n    window.location.href =\n      \"https://github.com/login/oauth/authorize?client_id=\" + OAuthClientID;\n  };\n\n  return (\n    <ButtonContainer absolute={isAbsolute}>\n      {!isLoggedIn ? (\n        <Button onClick={callOAuth}>\n          <FontAwesomeIcon icon={faGithub} /> Log in\n        </Button>\n      ) : (\n        <Text>Logged in as {localStorage.getItem(\"githubUsername\")}</Text>\n      )}\n    </ButtonContainer>\n  );\n};\n","import React from \"react\";\n\nexport default function LoaderSvg({ fill }) {\n  return (\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 38 38\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke={fill}\n    >\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <g transform=\"translate(1 1)\" stroke-width=\"2\">\n          <circle stroke-opacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n          <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"rotate\"\n              from=\"0 18 18\"\n              to=\"360 18 18\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n          </path>\n        </g>\n      </g>\n    </svg>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport LoaderSvg from \"./LoaderSvg\";\n\nconst LoaderContainer = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n`;\n\nexport const Loader = () => (\n  <LoaderContainer>\n    <LoaderSvg fill=\"#2ecc71\" />\n  </LoaderContainer>\n);\n","import styled from \"styled-components\";\n\nexport const BlogContainer = styled.div`\n  margin: 0 auto 0 auto;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px;\n`;\n","import styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n  cursor: pointer;\n  margin-bottom: 1rem;\n  border-radius: 10px;\n  padding: 10px;\n  transition: 0.2s;\n  position: relative;\n  background-color: rgb(255, 255, 255);\n  color: rgb(54, 53, 55);\n  transition: all 0.25s linear 0s;\n\n  &:hover {\n    background-color: #f5f5f5;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledCategory = styled.div`\n  display: inline-block;\n  background: #009bbb;\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 12px;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: 300;\n  line-height: 16px;\n  font-family: \"Quicksand\";\n  margin-right: 10px;\n  margin-bottom: 8px;\n`;\n\nexport const CardCategory = ({ value }) => (\n  <StyledCategory key={value.id} style={{ backgroundColor: `#${value.color}` }}>\n    {value.name}\n  </StyledCategory>\n);\n","import styled from \"styled-components\";\n\nexport const CardDescription = styled.p`\n  font-size: 18px;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ReadingTime = styled.p`\n  color: #b5b5b5;\n  font-size: 16px;\n  margin-bottom: 8px;\n`;\n\nexport const CardReadingTime = ({ time }) => (\n  <ReadingTime>{time} Min Read</ReadingTime>\n);\n","import React, { useState, useEffect } from \"react\";\nimport readingTime from \"reading-time\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  CardContainer,\n  CardHeader,\n  CardCategory,\n  CardReadingTime,\n  CardDescription,\n} from \"./\";\n\nexport const Card = ({ blog }) => {\n  const [labels, setLabels] = useState([]);\n  const history = useHistory();\n\n  const openBlog = (title, number) => {\n    history.push(`/post/${title}/${number}`);\n  };\n\n  useEffect(() => {\n    const labels = blog.labels.nodes.filter((value) => {\n      return value.name !== \"blog\";\n    });\n\n    setLabels(labels);\n  }, [blog.labels.nodes]);\n\n  return (\n    <CardContainer>\n      <div onClick={() => openBlog(blog.title, blog.number)}>\n        <h2 style={{ marginTop: \"0.2em\" }}>{blog.title}</h2>\n        <CardHeader>\n          <>\n            {labels.map((value, i) => {\n              return <CardCategory value={value} key={i} />;\n            })}\n          </>\n        </CardHeader>\n        <CardReadingTime time={readingTime(blog.body).minutes} />\n        <CardDescription>{blog.bodyText}</CardDescription>\n      </div>\n    </CardContainer>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { config } from \"../config\";\nimport { Header } from \"../components/Header\";\nimport { Loader } from \"../components/Common\";\nimport { BlogContainer } from \"../components/Blog\";\nimport { Card } from \"../components/Blog/Card\";\n\nconst GET_POSTS = gql`\n{\n  repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n    issues(first: 100, states: OPEN, orderBy: { direction: DESC, field: CREATED_AT }) {\n      nodes {\n        title\n        body\n        bodyHTML\n        bodyText\n        number\n        labels(first: 100) {\n          nodes {\n            color\n            name\n            id\n          }\n        }\n        author {\n          url\n          avatarUrl\n          login\n        }\n        updatedAt\n        id\n      }\n    }\n  }\n}\n`;\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        console.error(error);\n      }\n\n      if (data) {\n        setPosts(data?.repository?.issues?.nodes);\n      }\n    }\n  }, [loading, error, data]);\n\n  return (\n    <>\n      <Header />\n      <BlogContainer>\n        {loading ? (\n          <Loader />\n        ) : (\n          posts.map((v, i) => {\n            return <Card blog={v} key={i} />;\n          })\n        )}\n      </BlogContainer>\n    </>\n  );\n};\n\nexport default Blog;\n","import { reverseMapping } from \"./tools\";\n\nconst emojis = {\n  THUMBS_UP: \"👍\",\n  THUMBS_DOWN: \"👎\",\n  LAUGH: \"😄\",\n  HOORAY: \"🎉\",\n  CONFUSED: \"😕\",\n  HEART: \"❤️\",\n  ROCKET: \"🚀\",\n  EYES: \"👀\",\n};\n\nexport const getEmojiByName = (emojiName) => {\n  return emojis[emojiName] || \"\";\n};\n\nexport const getNameByEmoji = (emoji) => {\n  return reverseMapping(emojis)[emoji] || \"\";\n};\n","export const reverseMapping = (obj) => {\n  const reversed = {};\n  Object.keys(obj).forEach((key) => {\n    reversed[obj[key]] = key;\n  });\n  return reversed;\n};\n","export const getToken = () => {\n  return localStorage.getItem(\"githubToken\");\n};\n\nexport const getAuthenticatedUser = async () => {\n  const token = localStorage.getItem(\"githubToken\");\n  if (token) {\n    const response = await fetch(\"https://api.github.com/user\", {\n      headers: new Headers({\n        authorization: `Bearer ${token}`,\n      }),\n    });\n    const result = await response.json();\n    result.token = token;\n    return result;\n  }\n};\n","import styled from \"styled-components\";\n\nexport const PostContainer = styled.div`\n  margin: 0 auto 0 auto;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px;\n  position: relative;\n`;\n","import styled from 'styled-components'\n\nexport const PostTitle = styled.h1`\n  @media only screen and (max-width: 768px) {\n    font-size: 30px;\n  }\n`","import styled from \"styled-components\";\n\nexport const PostDate = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n  margin-bottom: 0px;\n  margin-top: 0px;\n`;\n","import styled from \"styled-components\";\n\nexport const PostDateLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  transition-duration: 0.15s, 0.15s, 0.15s;\n  transition-timing-function: ease-in, ease-in, ease-in;\n  transition-delay: 0s, 0s, 0s;\n`;\n","import styled from 'styled-components'\n\nexport const PostReaction = styled.span`\n  position: static;\n  bottom: 60px;\n  animation-name: scale-in;\n  animation-duration: 0.15s;\n  animation-timing-function: cubic-bezier(0.2, 0, 0.13, 1.5);\n`\n","import styled from \"styled-components\";\n\nexport const BackButton = styled.button`\n  outline: none;\n  border: 1px solid;\n  font-size: 22px;\n  font-family: \"Shadows Into Light\", serif;\n  border-radius: 5px;\n  padding: 0px 20px 0 30px;\n  cursor: pointer;\n  position: relative;\n\n  :hover {\n    background-color: \"#373737\";\n    color: white;\n  }\n\n  :before {\n    content: \"\\\\27A4\";\n    position: absolute;\n    transform: translateY(-50%) rotate(180deg);\n    left: 10px;\n    font-size: 16px;\n    top: 54%;\n  }\n`;\n","import styled from 'styled-components'\n\nexport const AuthorDetails = styled.div`\n  display: flex;\n  align-items: center;\n`","import styled from 'styled-components'\n\nexport const AuthorAvatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 40px;\n  margin: 10px;\n  margin-left: 0px;\n`","import styled from \"styled-components\";\n\nexport const AuthorName = styled.p`\n  margin-bottom: 0px;\n  margin-top: 0px;\n  font-size: 16px;\n`;\n","import React from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport const HyperLink = ({ children, ...props }) => (\n  <a\n    href={props.href}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    className=\"blog-post-anchor\"\n  >\n    {children}\n  </a>\n);\n\nexport const CodeBlock = ({ children }) => (\n  <SyntaxHighlighter language=\"javascript\" style={docco}>\n    {children.props.children}\n  </SyntaxHighlighter>\n);\n","import React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\nimport moment from \"moment\";\n\nimport {PostDate} from \"../\";\nimport {AuthorAvatar, AuthorDetails, AuthorName} from \"../Author\";\nimport {CommentContainer} from \"./\";\n\nimport {HyperLink, CodeBlock} from \"../../Markdown/Overrides\";\n\nexport const Comment = ({comment}) => {\n  return (\n    <CommentContainer>\n      <AuthorDetails>\n        <AuthorAvatar\n          src={comment.author.avatarUrl}\n          alt={comment.author.login}\n        />\n        <div>\n          <AuthorName>{comment.author.login}</AuthorName>\n          <PostDate>{moment(comment.updatedAt).format(\"DD MMM YYYY\")}</PostDate>\n        </div>\n      </AuthorDetails>\n\n      <Markdown\n        options={{\n          overrides: {\n            a: {\n              component: HyperLink,\n            },\n            pre: {\n              component: CodeBlock,\n            },\n          },\n        }}\n      >\n        {comment.body}\n      </Markdown>\n    </CommentContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const CommentContainer = styled.div`\n  margin-top: 3rem;\n  border-radius: 10px;\n  padding: 10px 30px;\n  position: relative;\n  font-size: 16px;\n`;\n","import styled from \"styled-components\";\n\nexport const CommentLink = styled.a`\n  outline: none;\n  border: 1px solid;\n  font-size: 22px;\n  font-family: \"Shadows Into Light\", serif;\n  border-radius: 5px;\n  padding: 0px 20px 0 20px;\n  cursor: pointer;\n  position: relative;\n  text-decoration: none;\n  margin: auto;\n\n  :hover {\n    background-color: \"#373737\";\n    color: white;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const CommentLinkContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 3rem;\n`;\n","import React from \"react\";\n\nimport {\n  Comment,\n  CommentLink,\n  CommentLinkContainer,\n} from \"../components/Post/Comment\";\n\nconst CommentsSection = ({ postUrl, comments }) => {\n  return (\n    <>\n      <CommentLinkContainer>\n        <CommentLink href={postUrl + \"#issue-comment-box\"} target=\"_blank\">\n          Post a comment\n        </CommentLink>\n      </CommentLinkContainer>\n      {comments.map((v, id) => (\n        <Comment comment={v} key={id} />\n      ))}\n    </>\n  );\n};\n\nexport default CommentsSection;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport moment from \"moment\";\nimport Markdown from \"markdown-to-jsx\";\nimport readingTime from \"reading-time\";\nimport { GithubSelector, GithubCounter } from \"react-reactions\";\nimport { userClient } from \"../utils/apollo\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { config } from \"../config\";\nimport { getEmojiByName, getNameByEmoji } from \"../utils/emoji\";\nimport { getAuthenticatedUser } from \"../utils/auth\";\nimport { Loader } from \"../components/Common\";\nimport {\n  PostContainer,\n  PostTitle,\n  PostDate,\n  PostDateLink,\n  PostReaction,\n  BackButton,\n} from \"../components/Post\";\nimport {\n  AuthorDetails,\n  AuthorAvatar,\n  AuthorName,\n} from \"../components/Post/Author\";\nimport { GithubLogin } from \"../components/Header\";\nimport { HyperLink, CodeBlock } from \"../components/Markdown/Overrides\";\nimport CommentsSection from \"./CommentsSection\";\n\nexport default function BlogHome() {\n  const issueNumber = parseInt(window.location.href.split(\"/\").pop());\n  const GET_POSTS = gql`{\n    repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n      issue(number: ${issueNumber}) {\n        title\n        body\n        bodyHTML\n        url\n        bodyText\n        number\n        bodyHTML\n        author {\n          url\n          avatarUrl\n          login\n        }\n        reactions(first:100){\n          nodes{\n            content\n            user{\n              id\n              login\n            }\n          }\n        }\n        updatedAt\n        id\n        comments(first:100) {\n          nodes {\n            author {\n              ... on User {\n                avatarUrl\n                name\n                login\n              }\n            }\n            body\n            bodyHTML\n            bodyText\n            publishedAt\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n  `;\n  const [post, setPost] = useState([]);\n  const [postNodeId, setPostNodeId] = useState(\"\");\n  const [reactionPopup, setReactionPopup] = useState(false);\n  const [postReactions, setPostReactions] = useState([]);\n  const [postComments, setPostComments] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n  const reactionsContainer = useRef(null);\n  const userToken = localStorage.getItem(\"githubToken\");\n\n  const setReactionFun = useCallback((reactions) => {\n    // {\n    //   emoji: \"👍\", // String emoji reaction\n    //   by: \"case\" // String of persons name\n    // }\n\n    let reactions_array = [];\n    reactions.forEach((element) => {\n      let obj = {\n        by: element.user.login,\n        emoji: getEmojiByName(element.content),\n      };\n      reactions_array.push(obj);\n    });\n\n    setPostReactions(reactions_array);\n  }, []);\n\n  const toggleReaction = async (emoji) => {\n    let reactions = postReactions;\n    const user = await getAuthenticatedUser();\n    const existingReaction = reactions.filter(\n      (r) => r.emoji === emoji && r.by === user.login\n    );\n\n    if (existingReaction.length === 0) {\n      const reactionToAdd = {\n        by: user.login,\n        emoji: emoji,\n      };\n\n      // Add the reaction\n      await userClient(userToken).mutate({\n        mutation: gql`\n          mutation AddReaction {\n            addReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(\n          emoji\n        )},clientMutationId:\"${user.node_id}\"}) {\n              reaction {\n                id\n              }\n            }\n          }\n        `,\n      });\n\n      reactions.push(reactionToAdd);\n    } else {\n      // Remove the reaction\n      await userClient(userToken).mutate({\n        mutation: gql`\n          mutation RemoveReaction {\n            removeReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(\n          emoji\n        )},clientMutationId:\"${user.node_id}\"}) {\n              reaction {\n                id\n              }\n            }\n          }\n        `,\n      });\n\n      // Remove the reaction from the state\n      reactions = reactions.filter(\n        (r) => !(r.by === user.login && r.emoji === emoji)\n      );\n    }\n\n    setPostReactions(reactions);\n    reactionsContainer.current.forceUpdate(); // refresh the counter\n    setReactionPopup(false); // hiding the reactions choice\n  };\n\n  useEffect(() => {\n    if (!loading) {\n      if (data) {\n        const issues = data.repository.issue;\n        setPostNodeId(issues.id);\n        setPost(issues);\n        setReactionFun(issues.reactions.nodes);\n        setPostComments(issues.comments.nodes);\n      }\n    }\n  }, [loading, error, data, setReactionFun]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  const onBackClick = () => {\n    // ifthe previous page does not exist in the history list. this method to load the previous (or next) URL in the history list.\n    window.history.go();\n    // The back() method loads the previous URL in the history list.\n    window.history.back();\n  };\n\n  return (\n    <>\n      {post.title && (\n        <PostContainer>\n          <BackButton onClick={() => onBackClick()}>Back</BackButton>\n\n          <PostTitle>{post.title}</PostTitle>\n          <div>\n            <AuthorDetails>\n              <AuthorAvatar\n                src={post.author.avatarUrl}\n                alt={post.author.login}\n              />\n              <div>\n                <AuthorName>{post.author.login}</AuthorName>\n                <PostDate>\n                  {moment(post.updatedAt).format(\"DD MMM YYYY\")} .\n                  {readingTime(post.body).minutes} Min Read .\n                  <PostDateLink href={post.url} target=\"_black\">\n                    View On Github\n                  </PostDateLink>\n                </PostDate>\n              </div>\n            </AuthorDetails>\n          </div>\n          <Markdown\n            options={{\n              overrides: {\n                a: {\n                  component: HyperLink,\n                },\n                pre: {\n                  component: CodeBlock,\n                },\n              },\n            }}\n          >\n            {post.body}\n          </Markdown>\n          {reactionPopup && (\n            <PostReaction>\n              {userToken ? (\n                <GithubSelector onSelect={(emoji) => toggleReaction(emoji)} />\n              ) : (\n                <GithubLogin isAbsolute={false} />\n              )}\n            </PostReaction>\n          )}\n          <GithubCounter\n            ref={reactionsContainer}\n            counters={postReactions}\n            onSelect={(emoji) => toggleReaction(emoji)}\n            onAdd={() => setReactionPopup(!reactionPopup)}\n          />\n          <CommentsSection postUrl={post.url} comments={postComments} />\n        </PostContainer>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Blog from \"./containers/Blog\";\nimport BlogPost from \"./containers/BlogPost\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter basename=\"posts\">\n      <Switch>\n        <Route exact path=\"/\" component={Blog} />\n        <Route exact path=\"/post/:title/:issueNumber\" component={BlogPost} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React, { useEffect, useState } from \"react\";\n\nimport { config } from \"../config\";\nimport { getAuthenticatedUser } from \"../utils/auth\";\nimport { Loader } from \"../components/Common/Loader\";\n\nconst { enableOAuth, OAuthClientID, OAuthSecret } = config;\n\nconst GithubCallback = () => {\n  const [loading, setLoading] = useState(true);\n\n  const authenticate = async (code) => {\n    // Apparently we need to use a proxy to make this request (CORS blocked for client-side only applications)\n    const response = await fetch(\n      \"https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token\",\n      {\n        method: \"POST\",\n        body: new URLSearchParams({\n          client_id: OAuthClientID,\n          client_secret: OAuthSecret,\n          code: code,\n        }),\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        }),\n      }\n    );\n\n    return response.json();\n  };\n\n  const setUsername = async () => {\n    const { login } = await getAuthenticatedUser();\n    localStorage.setItem(\"githubUsername\", login);\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    authenticate(urlParams.get(\"code\")).then((response) => {\n      if (response) {\n        localStorage.setItem(\"githubToken\", response.access_token);\n        setUsername().then(() => setLoading(false));\n      }\n    });\n  }, []);\n\n  if (!enableOAuth || !loading) {\n    return window.location.replace(\n      window.location.origin + window.location.pathname\n    );\n  }\n\n  return <Loader />;\n};\n\nexport default GithubCallback;\n","import React from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { Helmet } from \"react-helmet\";\n\nimport { config } from \"./config\";\nimport { client } from \"./utils/apollo\";\nimport Router from \"./Router\";\nimport GithubCallback from \"./containers/GithubCallback\";\n\nconst Application = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  if (urlParams.get(\"code\")) {\n    return <GithubCallback />;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{config.title}</title>\n        <meta charSet=\"utf-8\" />\n      </Helmet>\n      <ApolloProvider client={client}>\n        <Router />\n      </ApolloProvider>\n    </>\n  );\n};\n\nexport default Application;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}